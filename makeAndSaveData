{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNWP4VZI57y2nSgTkJkDQ2x"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"vpyyviErTO6D","executionInfo":{"status":"ok","timestamp":1690897081150,"user_tz":-540,"elapsed":356,"user":{"displayName":"김통일(이과대학 물리학)","userId":"05565847826958534561"}}},"outputs":[],"source":["\n","from sklearn.model_selection import train_test_split\n","from sklearn.datasets import fetch_california_housing\n","from sklearn.preprocessing import StandardScaler\n","from torchvision import datasets, transforms\n","\n","import copy\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import numpy as np\n","import pandas as pd\n","import torch\n","import torch.nn as nn\n","import torch.nn.functional as F\n","import torch.optim as optim\n","import tqdm\n","\n","\n","\n","\n","N, D_in, D_out = 1000, 2, 1\n","\n","# 입력과 출력 위한 랜덤 텐서\n","X = []\n","y = []\n","for j in range(N):\n","    X.append([])\n","    #y.append([])\n","    for i in range(D_out):\n","        X[-1].append( np.random.uniform(low=0.0, high=1000.0, size=None) )\n","        X[-1].append( np.random.uniform(low=-1000.0, high=1000.0, size=None) )\n","        y.append( (X[-1][-1]**2) / (2*X[-1][-2])  )\n","\n","\n","X = torch.Tensor(X)\n","y = torch.Tensor(y)\n","\n","# nn package를 이용하여 여러 층으로 정의된 모델 생성\n","# nn.Sequential은 다른 모듈을 담을 수 있는 모듈이며 담겨진 모듈은 순서대로 연결\n","# Linear 모듈은 곧 Affine 모듈\n","\n","# Read data\n","# data = fetch_california_housing()\n","# X, y = data.data, data.target\n","\n","# train-test split for model evaluation\n","\n","import time\n","# >>> # Save to file\n","# >>> x = torch.tensor([0, 1, 2, 3, 4])\n","# >>> torch.save(x, 'tensor.pt')\n","\n","torch.save(X, 'KEdataX_'+str(N)+'_'+str(time.time())+'.pt' )\n","torch.save(y, 'KEdataY_'+str(N)+'_'+str(time.time())+'.pt' )"]},{"cell_type":"code","source":[],"metadata":{"id":"YPwrZ2E7TcvW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"id":"wh2ptIhJUhV9"},"execution_count":null,"outputs":[]}]}